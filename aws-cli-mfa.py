#!/usr/bin/env python3

# Follow the directions from AWS on using MFA with CLI:
#  https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/

# That means: call STS with an ARN and an MFA token,
#  with the response, populate an MFA section in aws creds file
#  and, by default, use that profile after you run this

# sudo cp ./aws-cli-mfa.py /usr/bin/aws-cli-mfa && sudo chmod +x /usr/bin/aws-cli-mfa


import configparser
import argparse

argparser = argparse.ArgumentParser(description='Process some integers.')

argparser.add_argument('profile_arn', metavar='profile-arn',
    help='the AWS ARN for your MFA profile')
argparser.add_argument('mfa_token', metavar='mfa-token',
    help='the MFA token from your authenticator app for the MFA profile your ARN is for')
argparser.add_argument('-p', '--aws-creds-mfa-profile', default='mfa',
    help='profile to save MFA credentials to in AWS credentials file (default: mfa)')
argparser.add_argument('-f', '--aws-creds-file', default='~/.aws/credentials',
    help='file path to AWS credentials file (default: ~/.aws/credentials)')
argparser.add_argument('-e', '--aws-env-vars', action='store_true',
    help='set AWS access/secret/session env vars instead of updating creds file')
argparser.add_argument('-x', '--no-export-profile', action='store_true',
    help='do not export/set AWS_PROFILE to the one generated by STS')

args = argparser.parse_args()

print(args.profile_arn)
print(args.mfa_token)
print(args.aws_creds_mfa_profile)
print(args.aws_creds_file)
print(args.aws_env_vars)
print(args.no_export_profile)

config = configparser.ConfigParser()
config.read(args.aws_creds_file)



